@abbreviation{lhs,
  short = {LHS},
  long = {left-hand side},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{rhs,
  short = {RHS},
  long = {right-hand side},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{can,
  short = {CAN},
  long = {Controller Area Network},
  description = {A standard network for electronic communications in automotive applications},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{ssrg,
  short = {SSRG},
  long = {Systems Software Research Group},
  description = {The research group at Virginia Tech I have been a part of for almost eight years},
  seealso = {vt}
}
@abbreviation{vt,
  short = {VT},
  long = {Virginia Tech},
  description = {The university I attended for graduate school},
  seealso = {ssrg}
}
@abbreviation{ncsu,
  short = {NCSU},
  long = {North Carolina State University},
  description = {The university I attended for undergrad}
}

% Navy/military stuff
@abbreviation{navsea,
  short = {NAVSEA},
  long = {the Naval Sea Systems Command}
}
@abbreviation{neec,
  short = {NEEC},
  long = {the Naval Engineering Education Consortium}
}
@abbreviation{niwcp,
  short = {NIWC Pacific},
  long = {Naval Information Warfare Center Pacific}
}
@abbreviation{nswcdd,
  short = {NSWCDD},
  long = {the Naval Surface Warfare Center Dahlgren Division}
}
@abbreviation{darpa,
  short = {DARPA},
  long = {the Defense Advanced Research Projects Agency}
}
@abbreviation{darpa,
  short = {DARPA},
  long = {the Defense Advanced Research Projects Agency}
}
@abbreviation{onr,
  short = {ONR},
  prefix = {an},
  long = {the Office of Naval Research}
}

% Verification/analysis
@abbreviation{ih,
  short = {IH},
  long = {induction hypothesis},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{afp,
  short = {AFP},
  long = {Archive of Formal Proofs},
  cite = {afp}
}
@abbreviation{atp,
  short = {ATP},
  long = {automated theorem prover},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{bap,
  short = {BAP},
  long = {the Binary Analysis Platform},
  cite = {brumley2011bap}
}
@abbreviation{cg,
  short = {CG},
  long = {certificate generation}
}
@abbreviation{csp,
  short = {CSP},
  long = {communicating sequential processes}
}
@abbreviation{dil,
  short = {DiL},
  long = {decompilation into logic},
  cite = {myreen2007hoare,myreen2008dil,myreen2012dil}
}
@abbreviation{eicfg,
  short = {EICFG},
  long = {exceptional interprocedural control flow graph},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{iecfg,
  short = {IECFG},
  long = {interprocedural exception control-flow graph},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{fmuc,
  short = {FMUC},
  long = {formal memory usage certificate},
  prefixfirst = {a},
  prefix = {an},
}
@abbreviation{isar,
  short = {Isar},
  long = {intelligible semi-automated reasoning},
  prefixfirst = {an},
  prefix = {an},
  cite = {wenzel2007isabelle}
}
@abbreviation{itp,
  short = {ITP},
  long = {interactive theorem proving},
  prefixfirst = {an},
  prefix = {an},
  cite = {harrison2014itp,maric2015itp,schopf2018itp}
}
@abbreviation{hol,
  short = {HOL},
  long = {higher-order logic},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{hg,
  short = {HG},
  long = {Hoare graph},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{lfp,
  short = {LFP},
  long = {least fixed point},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{gfp,
  short = {GFP},
  long = {greatest fixed point},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{mc,
  short = {MC},
  long = {model checking},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{ml,
  short = {ML},
  long = {Meta Language},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{mrr,
  short = {MRR},
  long = {memory region relation},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{nqthm,
  short = {Nqthm},
  long = {the Boyer-Moore theorem prover},
  cite = {boyer1979computational}
}
@abbreviation{sa,
  short = {SA},
  long = {static analysis}
}
@abbreviation{smt,
  short = {SMT},
  long = {satisfiability modulo theories},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{scf,
  short = {SCF},
  long = {syntactic control flow},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{spade,
  short = {SPADE},
  long = {the Southampton Program Analysis Development Environment},
  cite = {carre1986spade}
}
@abbreviation{stp,
  short = {STP},
  long = {Simple Theorem Prover},
  prefixfirst = {a},
  prefix = {an},
  cite = {ganesh2007stp}
}
@abbreviation{tcb,
  short = {TCB},
  long = {trusted computing base}
}
@abbreviation{tv,
  short = {TV},
  long = {translation validation}
}
@abbreviation{uc,
  short = {UC},
  long = {user contract}
}
@abbreviation{vc,
  short = {VC},
  long = {verification condition}
}
@abbreviation{vcg,
  short = {VCG},
  long = {verification condition generator},
  prefixfirst = {a},
  prefix = {a}
}

% Control Flow
@abbreviation{cfg,
  short = {CFG},
  long = {control flow graph},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{cfi,
  short = {CFI},
  long = {control-flow integrity},
  cite = {abadi2009cfi}
}
@abbreviation{cfr,
  short = {CFR},
  long = {control flow recovery}
}

% Computing
@abbreviation{abi,
  short = {ABI},
  long = {application binary interface},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{aec2,
  short = {Amazon EC2},
  long = {Amazon Elastic Compute Cloud}
}
@abbreviation{api,
  short = {API},
  long = {application programming interface},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{apt,
  short = {APT},
  long = {Advanced Package Tool},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{asl,
  short = {ASL},
  long = {ARM Specification Language},
  prefixfirst = {an},
  prefix = {an},
  cite = {reid2016arm}
}
@abbreviation{ast,
  short = {AST},
  long = {abstract syntax tree},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{aes,
  short = {AES},
  long = {Advanced Encryption Standard}
}
@abbreviation{cbc,
  short = {CBC},
  long = {cipher block chaining}
}
@abbreviation{ci,
  short = {CI},
  long = {continuous integration}
}
@abbreviation{cots,
  short = {COTS},
  long = {commercial off-the-shelf},
  prefixfirst = {a},
  prefix = {a},
  shortplural = {COTSes},
  longplural = {commercial off-the-shelves}
}
@abbreviation{cpu,
  short = {CPU},
  long = {central processing unit},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{gpu,
  short = {GPU},
  long = {graphics processing unit},
  prefixfirst = {a},
  prefix = {a}
}
\DeclareAcronym{dm}{short=DM, long=}
@abbreviation{dm,
  short = {DM},
  long = {device model},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{dsl,
  short = {DSL},
  long = {domain-specific language},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{dvr,
  short = {DVR},
  long = {dead variable reduction}
}
@abbreviation{fdl,
  short = {FDL},
  long = {functional description language},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{eh,
  short = {EH},
  long = {exception handling},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{elf,
  short = {ELF},
  long = {Executable and Linkable Format},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{fpu,
  short = {FPU},
  long = {floating-point unit},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{gcm,
  short = {GCM},
  long = {Galois/Counter Mode}
}
@abbreviation{gcc,
  short = {GCC},
  long = {the GNU Compiler Collection}
}
@abbreviation{gdb,
  short = {GDB},
  long = {the GNU Project debugger},
  prefix = {a}
}
@abbreviation{ics,
  short = {ICS},
  shortplural = {ICSes},
  long = {industrial control system},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{il,
  short = {IL},
  long = {intermediate language},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{ir,
  short = {IR},
  long = {intermediate representation},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{ipc,
  short = {IPC},
  long = {inter-process communication},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{hvm,
  short = {HVM},
  long = {hardware virtual machine},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{jit,
  short = {JIT},
  long = {just-in-time},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{hdd,
  short = {HDD},
  long = {hard disk drive},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{ssd,
  short = {SSD},
  long = {solid-state drive},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{os,
  short = {OS},
  long = {operating system},
  prefixfirst = {an},
  prefix = {an},
  shortplural = {OSes}
}
@abbreviation{ram,
  short = {RAM},
  long = {random-access memory}
}
@abbreviation{jvm,
  short = {JVM},
  long = {Java virtual machine}
}
@abbreviation{isa,
  short = {ISA},
  long = {instruction set architecture},
  prefixfirst = {an},
  prefix = {an}
}
@abbreviation{cisc,
  short = {CISC},
  long = {complex instruction set computer},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{risc,
  short = {RISC},
  long = {reduced instruction set computer},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{mips,
  short = {MIPS},
  long = {Microprocessor without Interlocked Pipelined Stages}
}
@abbreviation{rop,
  short = {ROP},
  long = {return-oriented programming},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{rnn,
  short = {RNN},
  long = {recurrent neural network},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{rtos,
  short = {RTOS},
  long = {real-time operating system},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{sloc,
  short = {SLOC},
  long = {source lines of code}
}
@abbreviation{ppc,
  short = {PowerPC},
  long = {Performance Optimization With Enhanced RISC -- Performance Computing}
}
@abbreviation{sparc,
  short = {SPARC},
  long = {Scalable Processor Architecture}
}
@abbreviation{sse,
  short = {SSE},
  long = {Streaming SIMD Extensions},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{ssh,
  short = {SSH},
  long = {Secure Shell Protocol},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{qemu,
  short = {QEMU},
  long = {Quick Emulator}
}
@abbreviation{vm,
  short = {VM},
  long = {virtual machine},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{vmm,
  short = {VMM},
  long = {virtual machine monitor},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{simd,
  short = {SIMD},
  long = {single instruction, multiple data},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{dfs,
  short = {DFS},
  long = {depth-first search},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{so,
  short = {SO},
  long = {shared object},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{gpf,
  short = {GPF},
  long = {general protection fault},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{fifo,
  short = {FIFO},
  long = {first in, first out},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{lifo,
  short = {LIFO},
  long = {last in, first out},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{cie,
  short = {CIE},
  long = {Common Information Entry},
  longplural = {Common Information Entries},
  prefixfirst = {a},
  prefix = {a}
}
@abbreviation{fde,
  short = {FDE},
  long = {Frame Description Entry},
  longplural = {Frame Description Entries},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{lsda,
  short = {LSDA},
  long = {language-specific data area},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{lts,
  short = {LTS},
  long = {long-term support},
  prefixfirst = {a},
  prefix = {an}
}
@abbreviation{jtub,
  short = {JTUB},
  long = {jump table upper bound},
  prefixfirst = {a},
  prefix = {a}
}
