@symbol{step,
  name = {\ensuremath{\operatorname{\textproc{step}}}},
  description = {General form for a step function (used by the \ac{cfg}-driven and syntax-driven works)},
  parent = {state}
}

%% HG work
@index{memory-model, name = {memory model}}
@symbol{eval,
  name = {\ensuremath{\operatorname{eval}}},
  description = {Expression evaluation function; maps a possibly-state-dependent expression to a constant expression}
}
@symbol{fetch,
  name = {\ensuremath{\operatorname{fetch}}},
  description = {Disassembles the instruction at the supplied address},
  prefix = {a~}
}
@symbol{pred,
  name = {\ensuremath{\operatorname{pred}}},
  description = {Returns the predicate for the supplied state},
  parent = {state}
}
@symbol{sound,
  name = {\ensuremath{\operatorname{sound}}},
  description = {The supplied \ac{hg} is sound with respect to the supplied binary}
}
@symbol{step-hg,
  name = {\ensuremath{\operatorname{\textproc{step}}_\Sigma}},
  description = {The symbolic state step function for \ac{hg} generation},
  parent = {state}
}
% Not sure the \operatorname is really useful here
@symbol{step-hg-semantics,
  name = {\ensuremath{\operatorname\tau}},
  description = {The instruction-semantics-modeling inner step function for \ac{hg} generation},
  parent = {state}
}
@symbol{insertM,
  name = {\ensuremath{\operatorname{ins}}},
  description = {Inserts the first memory tree argument into the second},
  parent = {memory-model}
}
@symbol{explore,
  name = {\ensuremath{\operatorname{\textproc{explore}}}},
  description = {The base function of the \ac{hg} extraction algorithm}
}
